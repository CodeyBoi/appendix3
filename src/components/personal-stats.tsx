'use client';

import Head from 'next/head';
import { useMemo } from 'react';
import {
  ResponsiveContainer,
  AreaChart,
  Area,
  XAxis,
  YAxis,
  Tooltip,
  RadarChart,
  PolarGrid,
  PolarAngleAxis,
  PolarRadiusAxis,
  Radar,
} from 'recharts';
import { getOperatingYear } from 'utils/date';
import { trpc } from '../utils/trpc';

const encouragements = [
  'Ni 칛r verkligen ett bra team!',
  'Ni 칛r guld och gr칬na skogar!',
  'Ni 칛r guld v칛rda!',
  'Ni 칛r b칛st!',
  'Ni 칛r b칛st i stan!',
  'Ni 칛r helt fantastiska!',
  'Ni 칛r helt underbara!',
  'Ni 칛r cracked!',
  'Ni 칛r helt cracked!',
  'Ni 칛r HELT cracked!',
  'Ni 칛r motsatsen till d친liga!',
  'Ni 칛r motsatsen till tr친kiga!',
  'Ni 칛r motsatsen till washed!',
  'Ni 칛r motsatsen till washed up!',
  'Ni 칛r motsatsen till washed out!',
  'Ni s칛tter standarden!',
  'Ni 칛r standarden!',
  'Ni 칛r standarden f칬r hur det ska vara!',
  'Ni 칛r standarden f칬r hur det ska vara i corpset!',
  'Ni 칛r standarden f칬r hur det ska vara i corpsv칛rlden!',
  'Ni flyger h칬gt!',
  'Ni flyger h칬gre 칛n h칬gt!',
  'Ni flyger h칬gre 칛n tr칛bl친set!',
  'Ni rullar h칬gt!',
  'Ni spelar h칬gt!',
  'Ni 칛r h칬gt 칬ver medel!',
  'Ni 칛r h칬gt 칬ver snittet!',
  'Ni 칛r den dynamiskaste av duos!',
  'Ni 칛r hammen till den andras burgare!',
  'Ni 칛r mj칬lken till den andras kaffe!',
  'Ni 칛r kaffet till den andras mj칬lk!',
  'Ni 칛r de vita prickarna till den andras r칬da bakgrund!',
  'Ni 칛r Rick till den andras Morty!',
  'Ni 칛r hornen till den andras Bleck!',
  'Ni 칛r ginen till den andras tonic!',
  'Ni 칛r colan till den andras rom!',
  'Ni 칛r red-bullen till den andras vodka!',
  'Ni 칛r alkoholen till den andras alkol친s!',
  'Ni 칛r alkoholen till den andras alkoholism!',
  '츿r det inte vackert n칛r tv친 corps 칛lskar varandra?',
  'Ni 칛r en riktig power-duo!',
  'Ni 칛r ett riktigt power-couple!',
  'Ni 칛r ett riktigt power-team!',
  'Corpset 칛r s친 glada att ni finns!',
  'Corpset ser fram emot att f친 se er fler g친nger!',
  'Corpset hoppas p친 att se er fler g친nger!',
  'Corpset hoppas p친 att f친 se er fler g친nger!',
  'Corpset ser dig.',
  'Corpset 칛lskar dig.',
  'Corpset ser dig. Corpset 칛lskar dig.',
  'Corpset ser er.',
  'Corpset 칛lskar er.',
  'Corpset ser er. Corpset 칛lskar er.',
  'Corpset ser er. Corpset 칛lskar er. Corpset vill se er fler g친nger.',
  'Corpset ser er. Corpset 칛lskar er. Corpset vill se er fler g친nger. Corpset vill se er mer.',
  'Corpset v칛grar f칬rest칛lla sig corpset utan er!',
  'Corpset observerar era karri칛rer med stolthet!',
  'Corpset observerar era karri칛rer med stort intresse!',
  'Corpset observerar era karri칛rer med stor gl칛dje!',
  'Corpset 칛r stolta 칬ver er!',
  'Ni 칛r starkare tillsammans!',
  'Ni 칛r en enast친ende duo!',
  'Ni har en unik relation!',
  'Ni 칛r ett vinnande team!',
  'Ni g칬r varandra b칛ttre!',
  'Ni har en stark koppling!',
  'Ni 칛r en stark duo!',
  'Ni har en m칛ktig kraft som ett par!',
  'Ni har en framtid full av m칬jligheter tillsammans!',
];

interface PersonalStatsProps {
  operatingYear?: number;
}

const hash = (str: string) => {
  let hash = 5381;
  for (let i = 0; i < str.length; i++) {
    hash = (hash << 5) + hash + str.charCodeAt(i);
  }
  return Math.abs(hash);
};

const getEncouragement = (corpsId1: string, corpsId2: string) => {
  const combinedIndex =
    corpsId1 > corpsId2 ? corpsId1 + corpsId2 : corpsId2 + corpsId1;
  return encouragements[hash(combinedIndex) % encouragements.length];
};

const PersonalStats = ({
  operatingYear = getOperatingYear(),
}: PersonalStatsProps) => {
  const { data: self } = trpc.corps.getSelf.useQuery();
  const { data: pentagon } = trpc.stats.getPentagon.useQuery();

  const statPoints = useMemo(
    () => [
      {
        name: 'Attack',
        value: pentagon?.attack.toFixed(1) ?? 0,
      },
      {
        name: 'Styrka',
        value: pentagon?.strength.toFixed(1) ?? 0,
      },
      {
        name: 'Uth친llighet',
        value: pentagon?.endurance.toFixed(1) ?? 0,
      },
      {
        name: 'Tagg',
        value: pentagon?.hype.toFixed(1) ?? 0,
      },
      {
        name: 'P친litlighet',
        value: pentagon?.reliability.toFixed(1) ?? 0,
      },
    ],
    [pentagon],
  );

  const start = new Date(operatingYear, 8, 1);
  const end = new Date(operatingYear + 1, 7, 31);
  const { data: corpsRelations } = trpc.stats.getCorpsBuddy.useQuery({
    start,
    end,
  });
  const { corpsBuddy, corpsEnemy } = corpsRelations ?? {};

  const { data: monthlyStats } = trpc.stats.getMonthly.useQuery({
    start: new Date(2010, 0, 1),
    end,
  });

  const { data: career } = trpc.stats.getCareer.useQuery();
  const { joined, points, rehearsals } = career ?? {};
  const joinedText = joined?.toLocaleDateString('sv-SE', {
    day: 'numeric',
    month: 'long',
    year: 'numeric',
  });
  const careerText =
    joined && points !== undefined && rehearsals !== undefined
      ? `Sedan du gick med i corpset den ${joinedText} har du varit med p친 ${rehearsals} rep och samlat ihop ${points} spelpo칛ng. Sick!`
      : '';

  const chartData = useMemo(
    () =>
      monthlyStats?.map((item) => ({
        name: `${item.month
          .toLocaleDateString('sv-SE', { month: 'short' })
          .slice(0, 3)
          .toUpperCase()} ${item.month.getFullYear()}`,
        points: item.points,
        maxGigs: item.maxGigs,
      })),
    [monthlyStats],
  );

  const corpsBuddyName = `${
    corpsBuddy && corpsBuddy.number !== null
      ? '#' + corpsBuddy.number.toString()
      : 'p.e. '
  } ${corpsBuddy?.firstName} ${corpsBuddy?.lastName}`;
  const corpsEnemyName = `${
    corpsEnemy && corpsEnemy.number !== null
      ? '#' + corpsEnemy.number.toString()
      : 'p.e. '
  } ${corpsEnemy?.firstName} ${corpsEnemy?.lastName}`;

  const encouragement = getEncouragement(
    self?.id ?? '',
    corpsBuddy?.corpsId ?? '',
  );

  const corpsBuddyText = `Din corpsb칛stis f칬r 친ret 칛r ${corpsBuddyName} med hela ${corpsBuddy?.commonGigs} gemensamma spelningar! ${encouragement}`;

  const corpsEnemyText = `Du och ${corpsEnemyName} har dock ${
    corpsEnemy?.commonGigs === 0
      ? 'inte varit p친 en enda spelning'
      : `bara varit p친 ${corpsEnemy?.commonGigs} ${
          (corpsEnemy?.commonGigs ?? 2) > 1 ? 'spelningar' : 'spelning'
        }`
  } tillsammans. F칬rs칬ker ni undvika varandra?`;

  const avgSignupDelayDays = Math.trunc(pentagon?.avgSignupDelay ?? 0);
  const attackDaysText =
    avgSignupDelayDays === 0
      ? 'samma dag'
      : avgSignupDelayDays === 1
      ? 'n칛sta dag'
      : `efter ${avgSignupDelayDays} dagar`;
  const attackText = `Attack 칛r hur snabbt du anm칛ler dig till nya spelningar. N칛r en spelning dykt upp i blindtarmen 칛r du i snitt p친 hugget med en anm칛lan ${attackDaysText}!`;

  const strengthText = `Styrka 칛r inte implementerat 칛n lol. Just nu 칛r det bara snittet av de andra fyra. Maila f칬rslag pls.`;

  const enduranceText = `Uth친llighet baseras p친 din l칛ngsta streak bland de senaste spelningarna. F칬r dig 칛r det ${pentagon?.longestStreak} spelningar i rad!`;

  const hypeText = `Tagg 칛r hur taggad du varit p친 sistone, och du har varit ${Math.trunc(
    (pentagon?.hype ?? 0) * 10,
  )}% taggad p친 sistone!`;

  const avgSignupChangeHours = Math.trunc(
    (pentagon?.avgSignupChange ?? 0) * 24,
  );
  const avgSignupChangeText =
    avgSignupChangeHours < 4
      ? 'inte 칛ndra i din anm칛lan alls efter친t! Sekreteraren tackar dig f칬r att du st친r f칬r det du s칛ger!'
      : `칛ndra din anm칛lan i snitt ${avgSignupChangeHours} timmar efter친t. B칛ttre kan du!`;
  const reliabilityText = `P친litlighet 칛r hur mycket man kan lita p친 dig. Efter att du anm칛lt dig brukar du ${avgSignupChangeText}`;

  return (
    <div className='flex max-w-4xl flex-col text-base'>
      <Head>
        <title>Statistik f칬r n칬rdar</title>
      </Head>
      <h2>Statistik f칬r n칬rdar</h2>
      <div className='flex flex-col gap-2'>
        <div>
          <h3>Din corpscarri칛r</h3>
          {careerText}
        </div>
        <div className='flex flex-col gap-4'>
          <div className='text-center'>
            <h4>Graf 칬ver hur cool du varit fr친n m친nad till m친nad 游땙</h4>
          </div>
          <ResponsiveContainer width='100%' height={150}>
            <AreaChart data={chartData} style={{ marginLeft: '-35px' }}>
              <Area
                name='Dina spelningar'
                type='monotone'
                dataKey='points'
                stroke='none'
                fill={'#ce0c00'}
                fillOpacity={0.9}
              />
              <Area
                name='Corpsets spelningar'
                type='monotone'
                dataKey='maxGigs'
                stroke={'#ce0c00'}
                strokeDasharray='3 3'
                fill='none'
              />
              <XAxis dataKey='name' />
              <YAxis />
              <Tooltip />
            </AreaChart>
          </ResponsiveContainer>
          {pentagon && (
            <div className='grid grid-cols-1 lg:grid-cols-2'>
              <div>
                <h3>Dina corpsegenskaper 游늶</h3>
                {[
                  attackText,
                  strengthText,
                  enduranceText,
                  hypeText,
                  reliabilityText,
                ].join(' ')}
              </div>
              <ResponsiveContainer width='100%' height={210}>
                <RadarChart outerRadius={80} data={statPoints}>
                  <PolarGrid />
                  <PolarAngleAxis dataKey='name' />
                  <PolarRadiusAxis domain={[0, 10]} stroke='none' />
                  <Radar
                    name='Po칛ng'
                    dataKey='value'
                    stroke={'#ce0c00'}
                    fill={'#ce0c00'}
                    fillOpacity={0.6}
                    dot={true}
                  />
                  <Tooltip />
                </RadarChart>
              </ResponsiveContainer>
            </div>
          )}
          {(corpsBuddy || corpsEnemy) && (
            <div>
              <h4>Corpsb칛stis 游땒游뱋游땒 och corpss칛mstis 游땸</h4>
              {corpsBuddy &&
                `${corpsBuddyText} ${corpsEnemy && corpsEnemyText}`}
            </div>
          )}
        </div>
        <h3>Allm칛n statistik</h3>
      </div>
      <i>
        <b>DENNA SIDA 츿R UNDER KONSTRUKTION. SNART I EN BLINDTARM N츿RA DIG!</b>
        <br />
        (har du n친gra f칬rslag p친 vad som skulle kunna finnas p친 denna sida?
        skicka ett mail till{' '}
        <a style={{ color: 'blue' }} href='mailto:itk@bleckhornen.org'>
          <u>itk@bleckhornen.org</u>
        </a>
        )
      </i>
    </div>
  );
};

export default PersonalStats;
